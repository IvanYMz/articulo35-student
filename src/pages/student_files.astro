---
import Layout from "../layouts/Layout.astro";
import type { StudentFiles } from "../types/types";

let data: StudentFiles | null = null;
let dataError: Error | null = null;

try {
    const response = await fetch(`http://localhost:4321/api/student_info/student_files`);

    if (!response.ok) {
        throw new Error(`Failed to fetch data: ${response.statusText}`);
    }

    data = (await response.json()) as StudentFiles;
} catch (error) {
    dataError = error as Error;
}
---

<Layout title="Mis documentos">
    {dataError && (
        <p class="text-red-500">{dataError.message}</p>
    )}

    {data && data.length > 0 ? (
        <ul class="space-y-4">
            {data.map((file) => (
                <li class="flex justify-between items-center">
                    <a 
                        href={file.url} 
                        target="_blank" 
                        rel="noopener noreferrer" 
                        class="text-blue-600 hover:underline"
                    >
                        {file.name}
                    </a>
                    <div class="flex space-x-2">
                        <button 
                            class="px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600 update-button"
                            data-filename={file.name}
                            data-filefolder={file.folder}
                        >
                            Actualizar
                        </button>
                        <input 
                            type="file" 
                            accept="application/pdf,image/*" 
                            class="file-input"
                            data-filename={file.name}
                            data-filefolder={file.folder}
                        />
                    </div>
                </li>
            ))}
        </ul>
    ) : (
        !dataError && <p>No hay documentos disponibles.</p>
    )}
</Layout>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const updateButtons = document.querySelectorAll<HTMLButtonElement>(".update-button");

        updateButtons.forEach(button => {
            button.addEventListener("click", (event) => {
                const fileName = (event.target as HTMLButtonElement).getAttribute("data-filename");
                const fileFolder = (event.target as HTMLButtonElement).getAttribute("data-filefolder");
                const fileInput = document.querySelector<HTMLInputElement>(`.file-input[data-filename="${fileName}"]`);

                if (fileInput) {
                    fileInput.click();

                    fileInput.onchange = async () => {
                        const file = fileInput.files?.[0];
                        if (!file) return;
                        alert(fileFolder)
                        const formData = new FormData();
                        formData.append('file', file);
                        formData.append('name', fileName || '');
                        formData.append('folder', fileFolder || '')

                        try {
                            const response = await fetch(`http://localhost:4321/api/student_info/update_files`, {
                                method: 'PUT',
                                body: formData,
                            });

                            if (!response.ok) {
                                throw new Error(`Error al actualizar el archivo: ${response.statusText}`);
                            }

                            alert(`Archivo ${fileName} actualizado correctamente.`);
                            window.location.reload();
                        } catch (error) {
                            console.error('Error al actualizar el archivo:', error);
                        }
                    };
                }
            });
        });
    });
</script>
